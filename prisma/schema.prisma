generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model events {
  team            Int     @default(autoincrement()) @db.SmallInt
  time            Int     @db.SmallInt
  action          Int?    @db.SmallInt
  position        Int?    @db.SmallInt
  points          Int?    @db.SmallInt
  scouterUuid     String? @db.Uuid
  match           String?
  sourceTeam      Int?    @db.SmallInt
  tournamentKey   String?
  eventUuid       String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  scoutReportUuid String? @db.Uuid
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model featureToggles {
  feature String  @id
  isUsed  Boolean @default(true)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model flaggedMatches {
  uuid        String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  scouterName String
  sourceTeam  Int?
  match       String?
  tournament  String?
  note        String?
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model matches {
  key           String  @id
  tournamentKey String
  matchNumber   Int?    @db.SmallInt
  teamKey       String?
  matchType     String?
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mutablePicklist {
  mutablePicklistUuid String  @id @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  teams               Int[]
  team                Int?    @db.SmallInt
  username            String?
  name                String?
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model scoutReport {
  scoutReportUuid     String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  tournamentKey       String
  match               String? @default("")
  startTime           Int?    @db.SmallInt
  notes               String?
  links               Int?    @db.SmallInt
  robotRole           Int?    @db.SmallInt
  autoChallengeResult Int?    @db.SmallInt
  challengeResult     Int?    @db.SmallInt
  penaltyCard         Int?    @db.SmallInt
  driverAbility       Int?    @db.SmallInt
  sourceTeam          Int?
  team                Int?
  scouterUuid         String? @db.Uuid
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model scouterSchedule {
  sourceTeam          Int     @db.SmallInt
  tournamentKey       String
  startMatch          String?
  endMatch            String?
  scouterScheduleUuid String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  team1               Int[]
  team2               Int[]
  team3               Int[]
  team4               Int[]
  team5               Int[]
  team6               Int[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model scouters {
  scouterUuid        String @id @db.Uuid
  name               String
  team               Int?   @db.SmallInt
  strikes            Int?
  scouterReliability Int?
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sharedPicklist {
  picklistUuid String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String
  avgTotal     Int?    @db.SmallInt
  team         Int?    @db.SmallInt
  username     String?
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model teams {
  key        String  @id
  teamNumber Int     @db.SmallInt
  teamName   String?
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model teamsRegistered {
  team          Int     @id @default(autoincrement()) @db.SmallInt
  teamCode      BigInt?
  email         String?
  emailVerified Boolean @default(false)
  fullyVerified Boolean @default(false)
  username      String?
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model tournaments {
  name          String
  location      String?
  date          String?
  tournamentKey String  @id
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model users {
  team     Int
  email    String  @unique(map: "users_email2_key")
  username String?
}


